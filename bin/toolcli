#!/usr/bin/env php
<?php

require __DIR__.'/../vendor/autoload.php';

use Symfony\Component\Console\Application;
use ToolCli\Context\Demo\Command\DemoArgumentCommand;
use ToolCli\Context\Demo\Command\DemoChoiceCommand;
use ToolCli\Context\Demo\Command\DemoCommand;
use ToolCli\Context\Demo\Command\DemoInputCommand;
use ToolCli\Context\Git\Flow\Command\GitFlowCommand;
use ToolCli\Context\Git\Flow\Command\GitFlowFeatureCommand;
use ToolCli\Context\Git\Flow\Command\GitFlowHotfixCommand;
use ToolCli\Context\Git\Flow\Command\GitFlowReleaseCommand;
use ToolCli\Context\Php\Command\Password\PhpHashCommand;
use ToolCli\Context\Php\Command\Password\PhpHashRevertCommand;
use ToolCli\Context\Php\Command\PhpUrlCommand;
use ToolCli\Context\Symfony\Crud\Command\SymfonyCrudCommand;
use ToolCli\Core\Command\HelloCommand;

$application = new Application();

// ... register commands
$application->add(new HelloCommand());
$application->add(new GitFlowCommand());
$application->add(new DemoCommand());
$application->add(new DemoArgumentCommand());
$application->add(new DemoInputCommand());
$application->add(new DemoChoiceCommand());
$application->add(new GitFlowFeatureCommand());
$application->add(new GitFlowReleaseCommand());
$application->add(new GitFlowHotfixCommand());
$application->add(new PhpHashCommand());
$application->add(new PhpHashRevertCommand());
$application->add(new PhpUrlCommand());
$application->add(new SymfonyCrudCommand());

$application->run();
